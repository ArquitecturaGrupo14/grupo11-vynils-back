{
	"info": {
		"_postman_id": "79226bdf-e948-4fc7-9735-0fec72f8b2ca",
		"name": "Musician Tests",
		"description": "Colección de pruebas sobre el recurso Artist",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Crear un músico",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d7b002d8-e9ee-42a6-ad7b-dc68eda93813",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_m\",data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Rubén Blades Bellido de Luna\",\n    \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Ruben_Blades_by_Gage_Skidmore.jpg/800px-Ruben_Blades_by_Gage_Skidmore.jpg\",\n    \"description\": \"Es un cantante, compositor, músico, actor, abogado, político y activista panameño. Ha desarrollado gran parte de su carrera artística en la ciudad de Nueva York.\",\n    \"birthDate\": \"1948-07-16T00:00:00-05:00\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/musicians",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"musicians"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea un nuevo músico. El Id es inicializado por la BD y se debe ver en la respuesta.\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Crear un músico 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7ab33ce7-67bc-48b1-89fc-54a34f4d2420",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_m2\",data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\n        \"name\": \"Joan Manuel Serrat Teresa\",\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/e/e3/Serrat.jpg\",\n        \"description\": \"Es un cantautor, compositor, actor, escritor, poeta y músico español.\",\n        \"birthDate\": \"1943-12-27T00:00:00-05:00\"\n    }"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/musicians",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"musicians"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea un nuevo músico. El Id es inicializado por la BD y se debe ver en la respuesta.\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener todos los músicos",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "12cd7d6e-5d7e-4eb6-9781-834c0cdedb64",
						"exec": [
							"var data= JSON.parse(responseBody);",
							"tests[\"No genera error en el Gell All\"] = responseCode.code === 200;",
							"tests[\"musicians count\"] = data.length >= 1;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/musicians",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"musicians"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta todos los músicos de la aplicacion. \r\n\r\nLa petición no tiene cuerpo.\r\n\r\nPara la prueba, se verifica que el conjunto de músicos en la respuesta tenga mas de uno.\r\n\r\n**Código http esperado: 200**\r\n\r\n**Ejemplo de respuesta**\r\n\r\n```\r\n[\r\n    {\r\n        \"id\": 2,\r\n        \"name\": \"Joan Manuel Serrat Teresa\",\r\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/e/e3/Serrat.jpg\",\r\n        \"description\": \"Es un cantautor, compositor, actor, escritor, poeta y músico español.\",\r\n        \"birthDate\": \"1943-12-27T05:00:00.000Z\",\r\n        \"albums\": [],\r\n        \"performerPrizes\": []\r\n    },\r\n    {\r\n        \"id\": 1,\r\n        \"name\": \"Rubén Blades Bellido de Luna\",\r\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Ruben_Blades_by_Gage_Skidmore.jpg/800px-Ruben_Blades_by_Gage_Skidmore.jpg\",\r\n        \"description\": \"Es un cantante, compositor, músico, actor, abogado, político y activista panameño. Ha desarrollado gran parte de su carrera artística en la ciudad de Nueva York.\",\r\n        \"birthDate\": \"1948-07-16T05:00:00.000Z\",\r\n        \"albums\": [],\r\n        \"performerPrizes\": []\r\n    }\r\n]\r\n```"
			},
			"response": []
		},
		{
			"name": "Obtener un músico",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "383780db-20d3-4f24-8cca-0eef6f6260d6",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/musicians/{{new_id_m}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"musicians",
						"{{new_id_m}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta un músico de la aplicación.  \r\nLa petición no tiene cuerpo.\r\nSe envía el id del músico deseado por la URL de la petición.\r\n\r\n**Código http esperado: 200**\r\n\r\n**Ejemplo de respuesta**\r\n\r\n```\r\n{\r\n    \"id\": 1,\r\n    \"name\": \"Rubén Blades Bellido de Luna\",\r\n    \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Ruben_Blades_by_Gage_Skidmore.jpg/800px-Ruben_Blades_by_Gage_Skidmore.jpg\",\r\n    \"description\": \"Es un cantante, compositor, músico, actor, abogado, político y activista panameño. Ha desarrollado gran parte de su carrera artística en la ciudad de Nueva York.\",\r\n    \"birthDate\": \"1948-07-16T05:00:00.000Z\",\r\n    \"albums\": [],\r\n    \"performerPrizes\": []\r\n}\r\n```"
			},
			"response": []
		},
		{
			"name": "Obtener un núsico que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2067f599-5c42-4073-9812-edba4f1d6f29",
						"exec": [
							"tests[\"No se deberia obtener un músico con un id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"The musician with the given id was not found\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/musicians/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"musicians",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta un músico que no existe en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /musicians/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Editar un músico",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b0521253-1093-4d56-a965-0ae98f26b020",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Put\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Rubén Blades Bellido de Luna\",\n    \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Ruben_Blades_by_Gage_Skidmore.jpg/800px-Ruben_Blades_by_Gage_Skidmore.jpg\",\n    \"description\": \"Es un cantante, compositor, músico, actor, abogado, político y activista panameño.\",\n    \"birthDate\": \"1948-07-16T00:00:00-05:00\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/musicians/{{new_id_m}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"musicians",
						"{{new_id_m}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nActualiza un músico existente. \r\nse envía el Id en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Editar un músico que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ce51adb0-b2fa-492c-a7a7-3be7ad85841a",
						"exec": [
							"tests[\"No se deberia actualizar un músico con id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"The musician with the given id was not found\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Rubén Blades Bellido de Luna\",\n    \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Ruben_Blades_by_Gage_Skidmore.jpg/800px-Ruben_Blades_by_Gage_Skidmore.jpg\",\n    \"description\": \"Es un cantante, compositor, músico, actor, abogado, político y activista panameño.\",\n    \"birthDate\": \"1948-07-16T00:00:00-05:00\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/musicians/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"musicians",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\nActualiza un músico que no existe. \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /musicians/0 no existe.\".\r\n\r\n**Código HTTP esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Borrar un músico",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d40bd0f8-6fbc-46a5-8ecd-0388f7258c89",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/musicians/{{new_id_m}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"musicians",
						"{{new_id_m}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra un músico. Se envía el id del músico creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar el músico 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a64d0fef-82aa-481e-8019-6d46583d0d14",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/musicians/{{new_id_m2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"musicians",
						"{{new_id_m2}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra un músico. Se envía el id del músico creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar un músico que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4018fcc1-9f6b-4742-a84f-8ee546496b1c",
						"exec": [
							"tests[\"No se deberia borrar un músico con un id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"The musician with the given id was not found\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/musicians/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"musicians",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nBorra un músico que no existe en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /musicians/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "797d0f0f-e649-4e2a-873e-ea99b9194408",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "848d92ba-e696-4f4b-b2f9-b38d7fd01c93",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}